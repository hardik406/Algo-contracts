#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    bytecblock "patient" "none" "report"
    txn ApplicationID
    bnz main_after_if_else@2
    // smart_contracts/hello_world/contract.algo.ts:12
    // patient = GlobalState<string>({ key: "patient", initialValue: "none" })
    bytec_0 // "patient"
    bytec_1 // "none"
    app_global_put
    // smart_contracts/hello_world/contract.algo.ts:13
    // report = GlobalState<string>({ key: "report", initialValue: "none" })
    bytec_2 // "report"
    bytec_1 // "none"
    app_global_put

main_after_if_else@2:
    // smart_contracts/hello_world/contract.algo.ts:11
    // export class MedicalReport extends Contract {
    txn NumAppArgs
    bz main_bare_routing@8
    pushbytes 0x87e8ec8b // method "issueReport(string,string)string"
    txna ApplicationArgs 0
    match main_issueReport_route@5

main_after_if_else@12:
    // smart_contracts/hello_world/contract.algo.ts:11
    // export class MedicalReport extends Contract {
    pushint 0 // 0
    return

main_issueReport_route@5:
    // smart_contracts/hello_world/contract.algo.ts:15
    // issueReport(name: string, rep: string): string {
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // smart_contracts/hello_world/contract.algo.ts:11
    // export class MedicalReport extends Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // smart_contracts/hello_world/contract.algo.ts:15
    // issueReport(name: string, rep: string): string {
    callsub issueReport
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@8:
    // smart_contracts/hello_world/contract.algo.ts:11
    // export class MedicalReport extends Contract {
    txn OnCompletion
    bnz main_after_if_else@12
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return


// smart_contracts/hello_world/contract.algo.ts::MedicalReport.issueReport(name: bytes, rep: bytes) -> bytes:
issueReport:
    // smart_contracts/hello_world/contract.algo.ts:15
    // issueReport(name: string, rep: string): string {
    proto 2 1
    // smart_contracts/hello_world/contract.algo.ts:12
    // patient = GlobalState<string>({ key: "patient", initialValue: "none" })
    bytec_0 // "patient"
    // smart_contracts/hello_world/contract.algo.ts:16
    // this.patient.value = name
    frame_dig -2
    app_global_put
    // smart_contracts/hello_world/contract.algo.ts:13
    // report = GlobalState<string>({ key: "report", initialValue: "none" })
    bytec_2 // "report"
    // smart_contracts/hello_world/contract.algo.ts:17
    // this.report.value = rep
    frame_dig -1
    app_global_put
    // smart_contracts/hello_world/contract.algo.ts:18
    // return "Medical report issued for " + name
    pushbytes "Medical report issued for "
    frame_dig -2
    concat
    retsub
